import sys
import os
sys.path.insert(0, os.getcwd() + '/')

from mvn_utils import read_remote_file
from mvn_utils import sha1
from maven_package import MavenPackage, PackageID, package_manager

def maven_package(**kwargs):
    package = MavenPackage(
        package = kwargs.get('package'),
        repository = kwargs.get('repository'),
        type = kwargs.get('type')
    )
    nid = package.identifier.normalized_id
    remote_file(
        name =  nid + '-remote',
        out = '{0}__{1}.{2}'.format(nid, package.identifier.shid, package.extension),
        sha1 = package.mavensha1(),
        url = package.get_url(package.extension)
    )
    if package.extension == 'aar':
        prebuilt_jar(
            name = kwargs.get('name'),
            binary_jar = ':' + nid + '-remote',
            deps = kwargs.get('deps'),
            visibility = ['PUBLIC']
        )
    else:
        android_prebuilt_aar(
            name = kwargs.get('name'),
            aar = ':' + nid + '-remote',
            deps = kwargs.get('deps'),
            visibility = ['PUBLIC']
        )





sdkPath = '/home/vinz243/android-sdk'
def local_maven(pkg):
    group, name, version = pkg.split(':', 3)
    file = (sdkPath + '/extras/android/m2repository/'
        + group.replace('.', '/') + '/' + name + '/' + version + '/' + name
        + '-' + version + '.aar')
    target = name + '-' + version +'.aar'

    if not os.path.isfile(target):
        copyfile(file, 'libs/' + target)

    android_prebuilt_aar(
      name = name,
      aar = target,
      visibility = ['PUBLIC']
    )
